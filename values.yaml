## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param kubeVersion Override Kubernetes version
##
kubeVersion: ""
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in all Hyperdx deployments
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section Hyperdx Common parameters
##

## @param apiKey the Hyperdx api key. TODO: If not specified, use the ingestion api key for self-instrumentation.
##
apiKey: ""
## @param logLevel the logging level across all Hyperdx pipeline components. Allowed values: `error`, `warn`, `info`, `http`, `verbose`, `debug`, `silly`
##
logLevel: info
## @param publicUrl Type A DNS record that points to the the LoadBalancer service of the API gateway (Kong)
##
publicUrl: ""

## @section Hyperdx dashboard app Parameters
##
##
app:
  ## @param app.enabled Enable hyperdx dashboard app
  ##
  enabled: true
  ## @param app.replicaCount Number of Hyperdx app replicas to deploy
  ##
  replicaCount: 1
  ## @param app.defaultConfig [string] Hyperdx app default configuration
  ##
  # TODO: dashboard app client side is not yet able to read envs injected at runtime. See README for details
  defaultConfig: |
    HYPERDX_API_KEY: {{ .Values.apiKey }} 
    PORT: "8080"
    NEXT_PUBLIC_OTEL_EXPORTER_OTLP_ENDPOINT: {{ .Values.publicUrl }}/collector
    NEXT_PUBLIC_OTEL_SERVICE_NAME: "hdx-oss-app"
    NEXT_PUBLIC_SERVER_URL: {{ include "hyperdx.api.publicUrl" . }}

  ## @param app.extraConfig Hyperdx app extra configuration
  ##
  extraConfig: {}

  ## @param app.existingConfigmap The name of an existing ConfigMap with the default configuration
  ##
  existingConfigmap: ""
  ## @param app.extraConfigExistingConfigmap The name of an existing ConfigMap with extra configuration
  ##
  extraConfigExistingConfigmap: ""

  ## Hyperdx dashboard app image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param app.image.registry [default: ghcr.io] app image registry
  ## @param app.image.repository [default: hyperdxio/hyperdx] app image repository
  ## @skip app.image.tag app image tag (immutable tags are recommended)
  ## @param app.image.digest app image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param app.image.pullPolicy app image pull policy
  ## @param app.image.pullSecrets app image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-app
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## @param app.containerPorts.http Hyperdx dashboard app HTTP container port
  ##
  containerPorts:
    http: 8080
  ## Configure extra options for Hyperdx app containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param app.livenessProbe.enabled Enable livenessProbe on Hyperdx app containers
  ## @param app.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param app.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param app.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param app.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param app.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param app.readinessProbe.enabled Enable readinessProbe on Hyperdx app containers
  ## @param app.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param app.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param app.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param app.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param app.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param app.startupProbe.enabled Enable startupProbe on Hyperdx app containers
  ## @param app.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param app.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param app.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param app.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param app.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param app.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param app.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param app.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hyperdx app resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param app.resources.limits The resources limits for the Hyperdx app containers
  ## @param app.resources.requests The requested resources for the Hyperdx app containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param app.podSecurityContext.enabled Enabled Hyperdx app pods' Security Context
  ## @param app.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param app.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param app.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param app.podSecurityContext.fsGroup Set Hyperdx app pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param app.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param app.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param app.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param app.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param app.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param app.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param app.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param app.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param app.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  ## @param app.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param app.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param app.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param app.hostAliases Hyperdx app pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param app.podLabels Extra labels for Hyperdx app pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param app.podAnnotations Annotations for Hyperdx app pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param app.podAffinityPreset Pod affinity preset. Ignored if `app.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param app.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `app.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node app.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param app.nodeAffinityPreset.type Node affinity preset type. Ignored if `app.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param app.nodeAffinityPreset.key Node label key to match. Ignored if `app.affinity` is set
    ##
    key: ""
    ## @param app.nodeAffinityPreset.values Node label values to match. Ignored if `app.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param app.affinity Affinity for Hyperdx app pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `app.podAffinityPreset`, `app.podAntiAffinityPreset`, and `app.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param app.nodeSelector Node labels for Hyperdx app pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param app.tolerations Tolerations for Hyperdx app pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param app.updateStrategy.type Hyperdx app statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param app.priorityClassName Hyperdx app pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param app.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param app.schedulerName Name of the k8s scheduler (other than default) for Hyperdx app pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param app.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param app.lifecycleHooks for the Hyperdx app container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param app.extraEnvVars Array with extra environment variables to add to Hyperdx app nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param app.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hyperdx app nodes
  ##
  extraEnvVarsCM: ""
  ## @param app.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hyperdx app nodes
  ##
  extraEnvVarsSecret: ""
  ## @param app.extraVolumes Optionally specify extra list of additional volumes for the Hyperdx app pod(s)
  ##
  extraVolumes: []
  ## @param app.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hyperdx app container(s)
  ##
  extraVolumeMounts: []
  ## @param app.sidecars Add additional sidecar containers to the Hyperdx app pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param app.initContainers Add additional init containers to the Hyperdx app pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## @section Hyperdx app Traffic Exposure Parameters
  ##
  service:
    ## @param app.service.type Hyperdx app service type
    ##
    type: ClusterIP
    ## @param app.service.ports.http Hyperdx app service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param app.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param app.service.clusterIP Hyperdx app service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param app.service.loadBalancerIP Hyperdx app service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param app.service.loadBalancerSourceRanges Hyperdx app service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param app.service.externalTrafficPolicy Hyperdx app service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-app-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param app.service.annotations Additional custom annotations for Hyperdx app service
    ##
    annotations: {}
    ## @param app.service.extraPorts Extra ports to expose in Hyperdx app service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param app.service.sessionAffinity Control where app requests go, to the same pod or round-robin
    ## Values: appIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param app.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   appIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Hyperdx api Parameters
##
##
api:
  ## @param api.enabled Enable Hyperdx api
  ##
  enabled: true
  ## @param api.replicaCount Number of Hyperdx api replicas to deploy
  ##
  replicaCount: 1

  ## @param api.defaultConfig [string] Default configuration for the Hyperdx api service
  ##
  defaultConfig: |
    AGGREGATOR_API_URL: {{ include "hyperdx.aggregator.url" . }} 
    APP_TYPE: 'api'
    CLICKHOUSE_HOST: {{ include "hyperdx.clickhouse.host" . | quote }}
    CLICKHOUSE_LOG_LEVEL: {{ .Values.logLevel }} 
    CLICKHOUSE_USER: api
    CLICKHOUSE_PASSWORD: api
    EXPRESS_SESSION_SECRET: 'hyperdx is cool 👋'
    FRONTEND_URL: {{ include "hyperdx.app.publicUrl" . }} 
    HDX_NODE_ADVANCED_NETWORK_CAPTURE: "1"
    HDX_NODE_BETA_MODE: "1"
    HDX_NODE_CONSOLE_CAPTURE: "1"
    HYPERDX_API_KEY: {{ .Values.apiKey }} 
    HYPERDX_LOG_LEVEL: {{ .Values.logLevel }}
    INGESTOR_API_URL: {{ include "hyperdx.ingestor.url" . }}
    MINER_API_URL: {{ include "hyperdx.miner.url" . }}
    MONGO_URI: {{ include "hyperdx.mongodb.uri" . }} 
    OTEL_EXPORTER_OTLP_ENDPOINT: {{ include "hyperdx.otelCollector.url" . }} 
    OTEL_SERVICE_NAME: "hdx-oss-api"
    PORT: {{ .Values.api.containerPorts.http | quote }}
    REDIS_URL: {{ include "hyperdx.redis.url" . }}
    SERVER_URL: {{ include "hyperdx.api.url" . }}
    USAGE_STATS_ENABLED: "false"

  ## @param api.extraConfig Extra configuration for the Hyperdx api service
  ##
  extraConfig: {}

  ## @param api.existingConfigmap The name of an existing ConfigMap with the default configuration
  ##
  existingConfigmap: ""
  ## @param api.extraConfigExistingConfigmap The name of an existing ConfigMap with extra configuration
  ##
  extraConfigExistingConfigmap: ""

  ## Hyperdx api image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param api.image.registry [default: ghcr.io] api image registry
  ## @param api.image.repository [default: hyperdxio/hyperdx] api image repository
  ## @skip api.image.tag api image tag (immutable tags are recommended)
  ## @param api.image.digest api image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param api.image.pullPolicy api image pull policy
  ## @param api.image.pullSecrets api image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-api
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## @param api.containerPorts.http Hyperdx api HTTP container port
  ##
  containerPorts:
    http: 8000
  ## Configure extra options for Hyperdx api containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param api.livenessProbe.enabled Enable livenessProbe on Hyperdx api containers
  ## @param api.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param api.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param api.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param api.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param api.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param api.readinessProbe.enabled Enable readinessProbe on Hyperdx api containers
  ## @param api.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param api.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param api.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param api.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param api.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param api.startupProbe.enabled Enable startupProbe on Hyperdx api containers
  ## @param api.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param api.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param api.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param api.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param api.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param api.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param api.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param api.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hyperdx api resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param api.resources.limits The resources limits for the Hyperdx api containers
  ## @param api.resources.requests The requested resources for the Hyperdx api containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param api.podSecurityContext.enabled Enabled Hyperdx api pods' Security Context
  ## @param api.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param api.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param api.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param api.podSecurityContext.fsGroup Set Hyperdx api pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param api.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param api.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param api.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param api.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param api.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param api.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param api.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param api.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param api.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  ## @param api.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param api.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param api.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param api.hostAliases Hyperdx api pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param api.podLabels Extra labels for Hyperdx api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param api.podAnnotations Annotations for Hyperdx api pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param api.podAffinityPreset Pod affinity preset. Ignored if `api.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param api.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `api.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node api.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param api.nodeAffinityPreset.type Node affinity preset type. Ignored if `api.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param api.nodeAffinityPreset.key Node label key to match. Ignored if `api.affinity` is set
    ##
    key: ""
    ## @param api.nodeAffinityPreset.values Node label values to match. Ignored if `api.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param api.affinity Affinity for Hyperdx api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `api.podAffinityPreset`, `api.podAntiAffinityPreset`, and `api.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param api.nodeSelector Node labels for Hyperdx api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param api.tolerations Tolerations for Hyperdx api pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param api.updateStrategy.type Hyperdx api statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param api.priorityClassName Hyperdx api pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param api.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param api.schedulerName Name of the k8s scheduler (other than default) for Hyperdx api pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param api.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param api.lifecycleHooks for the Hyperdx api container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param api.extraEnvVars Array with extra environment variables to add to Hyperdx api nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param api.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hyperdx api nodes
  ##
  extraEnvVarsCM: ""
  ## @param api.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hyperdx api nodes
  ##
  extraEnvVarsSecret: ""
  ## @param api.extraVolumes Optionally specify extra list of additional volumes for the Hyperdx api pod(s)
  ##
  extraVolumes: []
  ## @param api.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hyperdx api container(s)
  ##
  extraVolumeMounts: []
  ## @param api.sidecars Add additional sidecar containers to the Hyperdx api pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param api.initContainers Add additional init containers to the Hyperdx api pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## @section Hyperdx Rest Traffic Exposure Parameters
  ##
  service:
    ## @param api.service.type Hyperdx api service type
    ##
    type: ClusterIP
    ## @param api.service.ports.http Hyperdx api service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param api.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param api.service.clusterIP Hyperdx api service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param api.service.loadBalancerIP Hyperdx api service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param api.service.loadBalancerSourceRanges Hyperdx api service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param api.service.externalTrafficPolicy Hyperdx api service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-api-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param api.service.annotations Additional custom annotations for Hyperdx api service
    ##
    annotations: {}
    ## @param api.service.extraPorts Extra ports to expose in Hyperdx api service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param api.service.sessionAffinity Control where api requests go, to the same pod or round-robin
    ## Values: RestIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param api.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   restIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Hyperdx Ingestor Parameters
##
##
ingestor:
  ## @param ingestor.enabled Enable Hyperdx ingestor
  ##
  enabled: true
  ## @param ingestor.replicaCount Number of Hyperdx ingestor replicas to deploy
  ##
  replicaCount: 1

  ## @param ingestor.defaultConfig [string] Default configuration for the Hyperdx ingestor service
  ##
  defaultConfig: |
    AGGREGATOR_API_URL: {{ include "hyperdx.aggregator.url" . }} 
    ENABLE_GO_PARSER: {{ .Values.goParser.enabled | quote }} 
    GO_PARSER_API_URL: {{ include "hyperdx.goParser.url" . }} 
    RUST_BACKTRACE: "full" 
    VECTOR_LOG: {{ .Values.logLevel }} 
    VECTOR_OPENSSL_LEGACY_PROVIDER: "false"

  ## @param ingestor.extraConfig Extra configuration for the Hyperdx ingestor service
  ##
  extraConfig: {}

  ## @param ingestor.existingConfigmap The name of an existing ConfigMap with the default configuration
  ##
  existingConfigmap: ""
  ## @param ingestor.extraConfigExistingConfigmap The name of an existing ConfigMap with extra configuration
  ##
  extraConfigExistingConfigmap: ""

  ## Hyperdx ingestor image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param ingestor.image.registry [default: ghcr.io] ingestor image registry
  ## @param ingestor.image.repository [default: hyperdxio/hyperdx] ingestor image repository
  ## @skip ingestor.image.tag ingestor image tag (immutable tags are recommended)
  ## @param ingestor.image.digest ingestor image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param ingestor.image.pullPolicy ingestor image pull policy
  ## @param ingestor.image.pullSecrets ingestor image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-ingestor
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## @param ingestor.containerPorts.http Hyperdx ingestor HTTP container port
  ## @param ingestor.containerPorts.health Hyperdx ingestor HTTP health container port
  ##
  containerPorts:
    http: 8002
    health: 8686
  ## Configure extra options for Hyperdx ingestor containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param ingestor.livenessProbe.enabled Enable livenessProbe on Hyperdx ingestor containers
  ## @param ingestor.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param ingestor.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param ingestor.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param ingestor.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param ingestor.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param ingestor.readinessProbe.enabled Enable readinessProbe on Hyperdx ingestor containers
  ## @param ingestor.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param ingestor.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param ingestor.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param ingestor.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param ingestor.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param ingestor.startupProbe.enabled Enable startupProbe on Hyperdx ingestor containers
  ## @param ingestor.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param ingestor.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param ingestor.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param ingestor.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param ingestor.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param ingestor.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param ingestor.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param ingestor.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hyperdx ingestor resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param ingestor.resources.limits The resources limits for the Hyperdx ingestor containers
  ## @param ingestor.resources.requests The requested resources for the Hyperdx ingestor containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param ingestor.podSecurityContext.enabled Enabled Hyperdx ingestor pods' Security Context
  ## @param ingestor.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param ingestor.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param ingestor.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param ingestor.podSecurityContext.fsGroup Set Hyperdx ingestor pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param ingestor.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param ingestor.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param ingestor.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param ingestor.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param ingestor.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param ingestor.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param ingestor.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param ingestor.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param ingestor.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  ## @param ingestor.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param ingestor.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param ingestor.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param ingestor.hostAliases Hyperdx ingestor pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param ingestor.podLabels Extra labels for Hyperdx ingestor pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param ingestor.podAnnotations Annotations for Hyperdx ingestor pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param ingestor.podAffinityPreset Pod affinity preset. Ignored if `ingestor.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param ingestor.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `ingestor.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node ingestor.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param ingestor.nodeAffinityPreset.type Node affinity preset type. Ignored if `ingestor.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param ingestor.nodeAffinityPreset.key Node label key to match. Ignored if `ingestor.affinity` is set
    ##
    key: ""
    ## @param ingestor.nodeAffinityPreset.values Node label values to match. Ignored if `ingestor.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param ingestor.affinity Affinity for Hyperdx ingestor pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `ingestor.podAffinityPreset`, `ingestor.podAntiAffinityPreset`, and `ingestor.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param ingestor.nodeSelector Node labels for Hyperdx ingestor pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param ingestor.tolerations Tolerations for Hyperdx ingestor pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param ingestor.updateStrategy.type Hyperdx ingestor statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param ingestor.priorityClassName Hyperdx ingestor pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param ingestor.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param ingestor.schedulerName Name of the k8s scheduler (other than default) for Hyperdx ingestor pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param ingestor.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param ingestor.lifecycleHooks for the Hyperdx ingestor container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param ingestor.extraEnvVars Array with extra environment variables to add to Hyperdx ingestor nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param ingestor.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hyperdx ingestor nodes
  ##
  extraEnvVarsCM: ""
  ## @param ingestor.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hyperdx ingestor nodes
  ##
  extraEnvVarsSecret: ""
  ## @param ingestor.extraVolumes Optionally specify extra list of additional volumes for the Hyperdx ingestor pod(s)
  ##
  extraVolumes: []
  ## @param ingestor.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hyperdx ingestor container(s)
  ##
  extraVolumeMounts: []
  ## @param ingestor.sidecars Add additional sidecar containers to the Hyperdx ingestor pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param ingestor.initContainers Add additional init containers to the Hyperdx ingestor pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## @section Hyperdx Rest Traffic Exposure Parameters
  ##
  service:
    ## @param ingestor.service.type Hyperdx ingestor service type
    ##
    type: ClusterIP
    ## @param ingestor.service.ports.http Hyperdx ingestor service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param ingestor.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param ingestor.service.clusterIP Hyperdx ingestor service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param ingestor.service.loadBalancerIP Hyperdx ingestor service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param ingestor.service.loadBalancerSourceRanges Hyperdx ingestor service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param ingestor.service.externalTrafficPolicy Hyperdx ingestor service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-ingestor-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param ingestor.service.annotations Additional custom annotations for Hyperdx ingestor service
    ##
    annotations: {}
    ## @param ingestor.service.extraPorts Extra ports to expose in Hyperdx ingestor service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param ingestor.service.sessionAffinity Control where ingestor requests go, to the same pod or round-robin
    ## Values: RestIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param ingestor.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   restIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Hyperdx aggregator Parameters
##
##
aggregator:
  ## @param aggregator.enabled Enable Hyperdx aggregator
  ##
  enabled: true
  ## @param aggregator.replicaCount Number of Hyperdx aggregator replicas to deploy
  ##
  replicaCount: 1

  ## @param aggregator.defaultConfig [string] Default configuration for the Hyperdx aggregator service
  ##
  defaultConfig: |
    APP_TYPE: "aggregator"
    CLICKHOUSE_HOST: {{ include "hyperdx.clickhouse.host" . }}
    CLICKHOUSE_PASSWORD: aggregator
    CLICKHOUSE_USER: aggregator
    FRONTEND_URL: {{ include "hyperdx.app.publicUrl" . }} 
    HYPERDX_LOG_LEVEL: {{ .Values.logLevel }}
    MONGO_URI: {{ include "hyperdx.mongodb.uri" . }} 
    NODE_ENV: development
    PORT: {{ .Values.aggregator.containerPorts.http | quote }}
    REDIS_URL: {{ include "hyperdx.redis.url" . }}
    SERVER_URL: {{ include "hyperdx.api.url" . }}

  ## @param aggregator.extraConfig Extra configuration for the Hyperdx aggregator service
  ##
  extraConfig: {}

  ## @param aggregator.existingConfigmap The name of an existing ConfigMap with the default configuration
  ##
  existingConfigmap: ""
  ## @param aggregator.extraConfigExistingConfigmap The name of an existing ConfigMap with extra configuration
  ##
  extraConfigExistingConfigmap: ""

  ## Hyperdx aggregator image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param aggregator.image.registry [default: ghcr.io] aggregator image registry
  ## @param aggregator.image.repository [default: hyperdxio/hyperdx] aggregator image repository
  ## @skip aggregator.image.tag aggregator image tag (immutable tags are recommended)
  ## @param aggregator.image.digest aggregator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param aggregator.image.pullPolicy aggregator image pull policy
  ## @param aggregator.image.pullSecrets aggregator image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-api
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## @param aggregator.containerPorts.http Hyperdx aggregator HTTP container port
  ##
  containerPorts:
    http: 8001
  ## Configure extra options for Hyperdx aggregator containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param aggregator.livenessProbe.enabled Enable livenessProbe on Hyperdx aggregator containers
  ## @param aggregator.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param aggregator.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param aggregator.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param aggregator.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param aggregator.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param aggregator.readinessProbe.enabled Enable readinessProbe on Hyperdx aggregator containers
  ## @param aggregator.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param aggregator.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param aggregator.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param aggregator.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param aggregator.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param aggregator.startupProbe.enabled Enable startupProbe on Hyperdx aggregator containers
  ## @param aggregator.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param aggregator.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param aggregator.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param aggregator.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param aggregator.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param aggregator.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param aggregator.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param aggregator.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hyperdx aggregator resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param aggregator.resources.limits The resources limits for the Hyperdx aggregator containers
  ## @param aggregator.resources.requests The requested resources for the Hyperdx aggregator containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param aggregator.podSecurityContext.enabled Enabled Hyperdx aggregator pods' Security Context
  ## @param aggregator.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param aggregator.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param aggregator.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param aggregator.podSecurityContext.fsGroup Set Hyperdx aggregator pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param aggregator.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param aggregator.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param aggregator.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param aggregator.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param aggregator.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param aggregator.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param aggregator.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param aggregator.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param aggregator.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  ## @param aggregator.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param aggregator.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param aggregator.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param aggregator.hostAliases Hyperdx aggregator pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param aggregator.podLabels Extra labels for Hyperdx aggregator pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param aggregator.podAnnotations Annotations for Hyperdx aggregator pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param aggregator.podAffinityPreset Pod affinity preset. Ignored if `aggregator.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param aggregator.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `aggregator.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node aggregator.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param aggregator.nodeAffinityPreset.type Node affinity preset type. Ignored if `aggregator.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param aggregator.nodeAffinityPreset.key Node label key to match. Ignored if `aggregator.affinity` is set
    ##
    key: ""
    ## @param aggregator.nodeAffinityPreset.values Node label values to match. Ignored if `aggregator.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param aggregator.affinity Affinity for Hyperdx aggregator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `aggregator.podAffinityPreset`, `aggregator.podAntiAffinityPreset`, and `aggregator.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param aggregator.nodeSelector Node labels for Hyperdx aggregator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param aggregator.tolerations Tolerations for Hyperdx aggregator pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param aggregator.updateStrategy.type Hyperdx aggregator statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param aggregator.priorityClassName Hyperdx aggregator pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param aggregator.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param aggregator.schedulerName Name of the k8s scheduler (other than default) for Hyperdx aggregator pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param aggregator.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param aggregator.lifecycleHooks for the Hyperdx aggregator container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param aggregator.extraEnvVars Array with extra environment variables to add to Hyperdx aggregator nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param aggregator.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hyperdx aggregator nodes
  ##
  extraEnvVarsCM: ""
  ## @param aggregator.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hyperdx aggregator nodes
  ##
  extraEnvVarsSecret: ""
  ## @param aggregator.extraVolumes Optionally specify extra list of additional volumes for the Hyperdx aggregator pod(s)
  ##
  extraVolumes: []
  ## @param aggregator.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hyperdx aggregator container(s)
  ##
  extraVolumeMounts: []
  ## @param aggregator.sidecars Add additional sidecar containers to the Hyperdx aggregator pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param aggregator.initContainers Add additional init containers to the Hyperdx aggregator pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## @section Hyperdx Rest Traffic Exposure Parameters
  ##
  service:
    ## @param aggregator.service.type Hyperdx aggregator service type
    ##
    type: ClusterIP
    ## @param aggregator.service.ports.http Hyperdx aggregator service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param aggregator.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param aggregator.service.clusterIP Hyperdx aggregator service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param aggregator.service.loadBalancerIP Hyperdx aggregator service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param aggregator.service.loadBalancerSourceRanges Hyperdx aggregator service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param aggregator.service.externalTrafficPolicy Hyperdx aggregator service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-aggregator-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param aggregator.service.annotations Additional custom annotations for Hyperdx aggregator service
    ##
    annotations: {}
    ## @param aggregator.service.extraPorts Extra ports to expose in Hyperdx aggregator service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param aggregator.service.sessionAffinity Control where aggregator requests go, to the same pod or round-robin
    ## Values: RestIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param aggregator.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   restIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Hyperdx goParser Parameters
##
##
goParser:
  ## @param goParser.enabled Enable Hyperdx goParser
  ##
  enabled: true
  ## @param goParser.replicaCount Number of Hyperdx goParser replicas to deploy
  ##
  replicaCount: 1

  ## @param goParser.defaultConfig [string] Default configuration for the Hyperdx goParser service
  ##
  defaultConfig: |
    AGGREGATOR_API_URL: {{ include "hyperdx.aggregator.url" . }} 
    HYPERDX_API_KEY: {{ .Values.apiKey }}
    HYPERDX_LOG_LEVEL: {{ .Values.logLevel }}
    OTEL_EXPORTER_OTLP_ENDPOINT: {{ include "hyperdx.otelCollector.url" . }} 
    OTEL_LOG_LEVEL: {{ .Values.logLevel }} 
    OTEL_SERVICE_NAME: hdx-oss-go-parser
    PORT: {{ .Values.goParser.containerPorts.http | quote }}

  ## @param goParser.extraConfig Extra configuration for the Hyperdx goParser service
  ##
  extraConfig: {}

  ## @param goParser.existingConfigmap The name of an existing ConfigMap with the default configuration
  ##
  existingConfigmap: ""
  ## @param goParser.extraConfigExistingConfigmap The name of an existing ConfigMap with extra configuration
  ##
  extraConfigExistingConfigmap: ""

  ## Hyperdx go parser image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param goParser.image.registry [default: ghcr.io] go parser image registry
  ## @param goParser.image.repository [default: hyperdxio/hyperdx] go parser image repository
  ## @skip goParser.image.tag go parser image tag (immutable tags are recommended)
  ## @param goParser.image.digest go parser image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param goParser.image.pullPolicy go parser image pull policy
  ## @param goParser.image.pullSecrets go parser image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-go-parser
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## @param goParser.containerPorts.http Hyperdx goParser HTTP container port
  ##
  containerPorts:
    http: 7777
  ## Configure extra options for Hyperdx goParser containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param goParser.livenessProbe.enabled Enable livenessProbe on Hyperdx goParser containers
  ## @param goParser.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param goParser.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param goParser.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param goParser.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param goParser.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param goParser.readinessProbe.enabled Enable readinessProbe on Hyperdx goParser containers
  ## @param goParser.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param goParser.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param goParser.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param goParser.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param goParser.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param goParser.startupProbe.enabled Enable startupProbe on Hyperdx goParser containers
  ## @param goParser.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param goParser.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param goParser.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param goParser.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param goParser.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param goParser.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param goParser.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param goParser.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hyperdx goParser resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param goParser.resources.limits The resources limits for the Hyperdx goParser containers
  ## @param goParser.resources.requests The requested resources for the Hyperdx goParser containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param goParser.podSecurityContext.enabled Enabled Hyperdx goParser pods' Security Context
  ## @param goParser.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param goParser.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param goParser.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param goParser.podSecurityContext.fsGroup Set Hyperdx goParser pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param goParser.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param goParser.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param goParser.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param goParser.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param goParser.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param goParser.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param goParser.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param goParser.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param goParser.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  ## @param goParser.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param goParser.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param goParser.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param goParser.hostAliases Hyperdx goParser pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param goParser.podLabels Extra labels for Hyperdx goParser pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param goParser.podAnnotations Annotations for Hyperdx goParser pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param goParser.podAffinityPreset Pod affinity preset. Ignored if `goParser.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param goParser.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `goParser.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node goParser.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param goParser.nodeAffinityPreset.type Node affinity preset type. Ignored if `goParser.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param goParser.nodeAffinityPreset.key Node label key to match. Ignored if `goParser.affinity` is set
    ##
    key: ""
    ## @param goParser.nodeAffinityPreset.values Node label values to match. Ignored if `goParser.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param goParser.affinity Affinity for Hyperdx goParser pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `goParser.podAffinityPreset`, `goParser.podAntiAffinityPreset`, and `goParser.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param goParser.nodeSelector Node labels for Hyperdx goParser pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param goParser.tolerations Tolerations for Hyperdx goParser pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param goParser.updateStrategy.type Hyperdx goParser statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param goParser.priorityClassName Hyperdx goParser pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param goParser.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param goParser.schedulerName Name of the k8s scheduler (other than default) for Hyperdx goParser pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param goParser.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param goParser.lifecycleHooks for the Hyperdx goParser container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param goParser.extraEnvVars Array with extra environment variables to add to Hyperdx goParser nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param goParser.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hyperdx goParser nodes
  ##
  extraEnvVarsCM: ""
  ## @param goParser.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hyperdx goParser nodes
  ##
  extraEnvVarsSecret: ""
  ## @param goParser.extraVolumes Optionally specify extra list of additional volumes for the Hyperdx goParser pod(s)
  ##
  extraVolumes: []
  ## @param goParser.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hyperdx goParser container(s)
  ##
  extraVolumeMounts: []
  ## @param goParser.sidecars Add additional sidecar containers to the Hyperdx goParser pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param goParser.initContainers Add additional init containers to the Hyperdx goParser pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## @section Hyperdx Rest Traffic Exposure Parameters
  ##
  service:
    ## @param goParser.service.type Hyperdx goParser service type
    ##
    type: ClusterIP
    ## @param goParser.service.ports.http Hyperdx goParser service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param goParser.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param goParser.service.clusterIP Hyperdx goParser service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param goParser.service.loadBalancerIP Hyperdx goParser service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param goParser.service.loadBalancerSourceRanges Hyperdx goParser service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param goParser.service.externalTrafficPolicy Hyperdx goParser service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-goParser-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param goParser.service.annotations Additional custom annotations for Hyperdx goParser service
    ##
    annotations: {}
    ## @param goParser.service.extraPorts Extra ports to expose in Hyperdx goParser service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param goParser.service.sessionAffinity Control where goParser requests go, to the same pod or round-robin
    ## Values: RestIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param goParser.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   restIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Hyperdx miner Parameters
##
##
miner:
  ## @param miner.enabled Enable Hyperdx miner
  ##
  enabled: true
  ## @param miner.replicaCount Number of Hyperdx miner replicas to deploy
  ##
  replicaCount: 1

  ## @param miner.defaultConfig [string] Default configuration for the Hyperdx miner service
  ##
  defaultConfig: |
    HYPERDX_API_KEY: {{ .Values.apiKey }} 
    HYPERDX_ENABLE_ADVANCED_NETWORK_CAPTURE: "1" 
    HYPERDX_LOG_LEVEL: {{ .Values.logLevel }}
    OTEL_EXPORTER_OTLP_ENDPOINT: {{ include "hyperdx.otelCollector.url" . }} 
    OTEL_LOG_LEVEL: {{ .Values.logLevel }} 
    OTEL_SERVICE_NAME: hdx-oss-miner

  ## @param miner.extraConfig Extra configuration for the Hyperdx miner service
  ##
  extraConfig: {}

  ## @param miner.existingConfigmap The name of an existing ConfigMap with the default configuration
  ##
  existingConfigmap: ""
  ## @param miner.extraConfigExistingConfigmap The name of an existing ConfigMap with extra configuration
  ##
  extraConfigExistingConfigmap: ""

  ## Hyperdx miner image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param miner.image.registry [default: ghcr.io] miner image registry
  ## @param miner.image.repository [default: hyperdxio/hyperdx] miner image repository
  ## @skip miner.image.tag miner image tag (immutable tags are recommended)
  ## @param miner.image.digest miner image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param miner.image.pullPolicy miner image pull policy
  ## @param miner.image.pullSecrets miner image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-miner
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## @param miner.containerPorts.http Hyperdx miner HTTP container port
  ##
  containerPorts:
    http: 5123
  ## Configure extra options for Hyperdx miner containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param miner.livenessProbe.enabled Enable livenessProbe on Hyperdx miner containers
  ## @param miner.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param miner.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param miner.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param miner.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param miner.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param miner.readinessProbe.enabled Enable readinessProbe on Hyperdx miner containers
  ## @param miner.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param miner.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param miner.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param miner.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param miner.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param miner.startupProbe.enabled Enable startupProbe on Hyperdx miner containers
  ## @param miner.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param miner.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param miner.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param miner.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param miner.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param miner.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param miner.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param miner.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hyperdx miner resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param miner.resources.limits The resources limits for the Hyperdx miner containers
  ## @param miner.resources.requests The requested resources for the Hyperdx miner containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param miner.podSecurityContext.enabled Enabled Hyperdx miner pods' Security Context
  ## @param miner.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param miner.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param miner.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param miner.podSecurityContext.fsGroup Set Hyperdx miner pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param miner.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param miner.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param miner.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param miner.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param miner.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param miner.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param miner.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param miner.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param miner.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  ## @param miner.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param miner.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param miner.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param miner.hostAliases Hyperdx miner pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param miner.podLabels Extra labels for Hyperdx miner pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param miner.podAnnotations Annotations for Hyperdx miner pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param miner.podAffinityPreset Pod affinity preset. Ignored if `miner.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param miner.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `miner.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node miner.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param miner.nodeAffinityPreset.type Node affinity preset type. Ignored if `miner.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param miner.nodeAffinityPreset.key Node label key to match. Ignored if `miner.affinity` is set
    ##
    key: ""
    ## @param miner.nodeAffinityPreset.values Node label values to match. Ignored if `miner.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param miner.affinity Affinity for Hyperdx miner pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `miner.podAffinityPreset`, `miner.podAntiAffinityPreset`, and `miner.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param miner.nodeSelector Node labels for Hyperdx miner pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param miner.tolerations Tolerations for Hyperdx miner pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param miner.updateStrategy.type Hyperdx miner statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param miner.priorityClassName Hyperdx miner pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param miner.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param miner.schedulerName Name of the k8s scheduler (other than default) for Hyperdx miner pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param miner.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param miner.lifecycleHooks for the Hyperdx miner container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param miner.extraEnvVars Array with extra environment variables to add to Hyperdx miner nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param miner.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hyperdx miner nodes
  ##
  extraEnvVarsCM: ""
  ## @param miner.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hyperdx miner nodes
  ##
  extraEnvVarsSecret: ""
  ## @param miner.extraVolumes Optionally specify extra list of additional volumes for the Hyperdx miner pod(s)
  ##
  extraVolumes: []
  ## @param miner.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hyperdx miner container(s)
  ##
  extraVolumeMounts: []
  ## @param miner.sidecars Add additional sidecar containers to the Hyperdx miner pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param miner.initContainers Add additional init containers to the Hyperdx miner pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## @section Hyperdx Rest Traffic Exposure Parameters
  ##
  service:
    ## @param miner.service.type Hyperdx miner service type
    ##
    type: ClusterIP
    ## @param miner.service.ports.http Hyperdx miner service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param miner.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param miner.service.clusterIP Hyperdx miner service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param miner.service.loadBalancerIP Hyperdx miner service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param miner.service.loadBalancerSourceRanges Hyperdx miner service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param miner.service.externalTrafficPolicy Hyperdx miner service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-miner-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param miner.service.annotations Additional custom annotations for Hyperdx miner service
    ##
    annotations: {}
    ## @param miner.service.extraPorts Extra ports to expose in Hyperdx miner service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param miner.service.sessionAffinity Control where miner requests go, to the same pod or round-robin
    ## Values: RestIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param miner.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   restIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Hyperdx open-telemetry collector Parameters
##
##
otelCollector:
  ## @param otelCollector.enabled Enable Hyperdx open-telemetry collector
  ##
  enabled: true
  ## @param otelCollector.replicaCount Number of Hyperdx otelCollector replicas to deploy
  ##
  replicaCount: 1

  ## @param otelCollector.defaultConfig [string] Default configuration for the Hyperdx otelCollector service
  ##
  defaultConfig: |
    HYPERDX_LOG_LEVEL: {{ .Values.logLevel }}
    INGESTOR_API_URL: {{ include "hyperdx.ingestor.url" . }}
  ## @param otelCollector.extraConfig Extra configuration for the Hyperdx otelCollector service
  ##
  extraConfig: {}

  ## @param otelCollector.existingConfigmap The name of an existing ConfigMap with the default configuration
  ##
  existingConfigmap: ""
  ## @param otelCollector.extraConfigExistingConfigmap The name of an existing ConfigMap with extra configuration
  ##
  extraConfigExistingConfigmap: ""

  ## Hyperdx otelCollector image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param otelCollector.image.registry [default: ghcr.io] otelCollector image registry
  ## @param otelCollector.image.repository [default: hyperdxio/hyperdx] otelCollector image repository
  ## @skip otelCollector.image.tag otelCollector image tag (immutable tags are recommended)
  ## @param otelCollector.image.digest otelCollector image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param otelCollector.image.pullPolicy otelCollector image pull policy
  ## @param otelCollector.image.pullSecrets otelCollector image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-otel-collector
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## @param otelCollector.containerPorts.http Hyperdx otelCollector HTTP container port
  ## @param otelCollector.containerPorts.health Hyperdx otelCollector health container port
  ## @param otelCollector.containerPorts.grpc Hyperdx otelCollector grpc container port
  ## @param otelCollector.containerPorts.pprof Hyperdx otelCollector pprof container port
  ## @param otelCollector.containerPorts.fluentd Hyperdx otelCollector fluentd container port
  ## @param otelCollector.containerPorts.zpages Hyperdx otelCollector zpages container port
  ## @param otelCollector.containerPorts.metrics Hyperdx otelCollector metrics container port
  ## @param otelCollector.containerPorts.zipkin Hyperdx otelCollector zipkin container port
  ##
  containerPorts:
    http: 4318
    health: 13133
    grpc: 4317
    pprof: 1888
    fluentd: 24225
    zpages: 55679
    metrics: 8888
    zipkin: 9411
  ## Configure extra options for Hyperdx otelCollector containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param otelCollector.livenessProbe.enabled Enable livenessProbe on Hyperdx otelCollector containers
  ## @param otelCollector.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param otelCollector.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param otelCollector.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param otelCollector.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param otelCollector.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param otelCollector.readinessProbe.enabled Enable readinessProbe on Hyperdx otelCollector containers
  ## @param otelCollector.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param otelCollector.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param otelCollector.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param otelCollector.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param otelCollector.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param otelCollector.startupProbe.enabled Enable startupProbe on Hyperdx otelCollector containers
  ## @param otelCollector.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param otelCollector.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param otelCollector.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param otelCollector.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param otelCollector.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
  ## @param otelCollector.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param otelCollector.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param otelCollector.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Hyperdx otelCollector resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param otelCollector.resources.limits The resources limits for the Hyperdx otelCollector containers
  ## @param otelCollector.resources.requests The requested resources for the Hyperdx otelCollector containers
  ##
  resources:
    limits: {}
    requests: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param otelCollector.podSecurityContext.enabled Enabled Hyperdx otelCollector pods' Security Context
  ## @param otelCollector.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy
  ## @param otelCollector.podSecurityContext.sysctls Set kernel settings using the sysctl interface
  ## @param otelCollector.podSecurityContext.supplementalGroups Set filesystem extra groups
  ## @param otelCollector.podSecurityContext.fsGroup Set Hyperdx otelCollector pod's Security Context fsGroup
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param otelCollector.containerSecurityContext.enabled Enabled containers' Security Context
  ## @param otelCollector.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
  ## @param otelCollector.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
  ## @param otelCollector.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
  ## @param otelCollector.containerSecurityContext.privileged Set container's Security Context privileged
  ## @param otelCollector.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
  ## @param otelCollector.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
  ## @param otelCollector.containerSecurityContext.capabilities.drop List of capabilities to be dropped
  ## @param otelCollector.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: null
    runAsUser: 1001
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"

  ## @param otelCollector.command Override default container command (useful when using custom images)
  ##
  command: []
  ## @param otelCollector.args Override default container args (useful when using custom images)
  ##
  args: []
  ## @param otelCollector.automountServiceAccountToken Mount Service Account token in pod
  ##
  automountServiceAccountToken: false
  ## @param otelCollector.hostAliases Hyperdx otelCollector pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param otelCollector.podLabels Extra labels for Hyperdx otelCollector pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param otelCollector.podAnnotations Annotations for Hyperdx otelCollector pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param otelCollector.podAffinityPreset Pod affinity preset. Ignored if `otelCollector.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param otelCollector.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `otelCollector.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node otelCollector.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param otelCollector.nodeAffinityPreset.type Node affinity preset type. Ignored if `otelCollector.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param otelCollector.nodeAffinityPreset.key Node label key to match. Ignored if `otelCollector.affinity` is set
    ##
    key: ""
    ## @param otelCollector.nodeAffinityPreset.values Node label values to match. Ignored if `otelCollector.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param otelCollector.affinity Affinity for Hyperdx otelCollector pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `otelCollector.podAffinityPreset`, `otelCollector.podAntiAffinityPreset`, and `otelCollector.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param otelCollector.nodeSelector Node labels for Hyperdx otelCollector pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param otelCollector.tolerations Tolerations for Hyperdx otelCollector pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param otelCollector.updateStrategy.type Hyperdx otelCollector statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## StrategyType
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: RollingUpdate

  ## @param otelCollector.priorityClassName Hyperdx otelCollector pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param otelCollector.topologySpreadConstraints Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param otelCollector.schedulerName Name of the k8s scheduler (other than default) for Hyperdx otelCollector pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param otelCollector.terminationGracePeriodSeconds Seconds Redmine pod needs to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param otelCollector.lifecycleHooks for the Hyperdx otelCollector container(s) to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param otelCollector.extraEnvVars Array with extra environment variables to add to Hyperdx otelCollector nodes
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param otelCollector.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Hyperdx otelCollector nodes
  ##
  extraEnvVarsCM: ""
  ## @param otelCollector.extraEnvVarsSecret Name of existing Secret containing extra env vars for Hyperdx otelCollector nodes
  ##
  extraEnvVarsSecret: ""
  ## @param otelCollector.extraVolumes Optionally specify extra list of additional volumes for the Hyperdx otelCollector pod(s)
  ##
  extraVolumes: []
  ## @param otelCollector.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Hyperdx otelCollector container(s)
  ##
  extraVolumeMounts: []
  ## @param otelCollector.sidecars Add additional sidecar containers to the Hyperdx otelCollector pod(s)
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param otelCollector.initContainers Add additional init containers to the Hyperdx otelCollector pod(s)
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  ## e.g:
  ## initContainers:
  ##  - name: your-image-name
  ##    image: your-image
  ##    imagePullPolicy: Always
  ##    command: ['sh', '-c', 'echo "hello world"']
  ##
  initContainers: []

  ## @section Hyperdx Rest Traffic Exposure Parameters
  ##
  service:
    ## @param otelCollector.service.type Hyperdx otelCollector service type
    ##
    type: ClusterIP
    ## @param otelCollector.service.ports.http Hyperdx otelCollector service HTTP port
    ##
    ports:
      http: 80
    ## Node ports to expose
    ## @param otelCollector.service.nodePorts.http Node port for HTTP
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
    ## @param otelCollector.service.clusterIP Hyperdx otelCollector service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param otelCollector.service.loadBalancerIP Hyperdx otelCollector service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param otelCollector.service.loadBalancerSourceRanges Hyperdx otelCollector service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param otelCollector.service.externalTrafficPolicy Hyperdx otelCollector service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-otelCollector-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param otelCollector.service.annotations Additional custom annotations for Hyperdx otelCollector service
    ##
    annotations: {}
    ## @param otelCollector.service.extraPorts Extra ports to expose in Hyperdx otelCollector service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param otelCollector.service.sessionAffinity Control where otelCollector requests go, to the same pod or round-robin
    ## Values: RestIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param otelCollector.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   restIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}

## @section Hyperdx task check alerts Parameters
##
##
taskCheckAlerts:
  ## @param taskCheckAlerts.enabled Enable the task-check-alerts Cronjob which checks for alert criteria and fires off any alerts as needed
  ##
  enabled: false

  ## @param taskCheckAlerts.defaultConfig [string] Hyperdx taskCheckAlerts default configuration
  ##
  defaultConfig: |
    APP_TYPE: 'scheduled-task'
    CLICKHOUSE_HOST: {{ include "hyperdx.clickhouse.host" . | quote }}
    CLICKHOUSE_LOG_LEVEL: {{ .Values.logLevel }} 
    CLICKHOUSE_PASSWORD: worker
    CLICKHOUSE_USER: worker
    FRONTEND_URL: {{ include "hyperdx.app.publicUrl" . }} 
    HYPERDX_API_KEY: {{ .Values.apiKey }} 
    HYPERDX_LOG_LEVEL: {{ .Values.logLevel }} 
    HDX_NODE_ADVANCED_NETWORK_CAPTURE: "1"
    HDX_NODE_BETA_MODE: "0"
    HDX_NODE_CONSOLE_CAPTURE: "1"
    INGESTOR_API_URL: {{ include "hyperdx.ingestor.url" . }}
    MINER_API_URL: {{ include "hyperdx.miner.url" . }}
    MONGO_URI: {{ include "hyperdx.mongodb.uri" . }} 
    OTEL_EXPORTER_OTLP_ENDPOINT: {{ include "hyperdx.otelCollector.url" . }} 
    OTEL_SERVICE_NAME: 'hdx-oss-task-check-alerts'
    REDIS_URL: {{ include "hyperdx.redis.url" . }}

  ## Hyperdx task check alerts image
  ## ref: https://github.com/hyperdxio/hyperdx/pkgs/container/hyperdx
  ## @param taskCheckAlerts.image.registry [default: ghcr.io] taskCheckAlerts image registry
  ## @param taskCheckAlerts.image.repository [default: hyperdxio/hyperdx] taskCheckAlerts image repository
  ## @skip taskCheckAlerts.image.tag taskCheckAlerts image tag (immutable tags are recommended)
  ## @param taskCheckAlerts.image.digest taskCheckAlerts image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param taskCheckAlerts.image.pullPolicy taskCheckAlerts image pull policy
  ## @param taskCheckAlerts.image.pullSecrets taskCheckAlerts image pull secrets
  ##
  image:
    registry: ghcr.io
    repository: hyperdxio/hyperdx
    tag: 1.8.0-api
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []

  ## Cronjob configurations for Hyperdx task check alerts
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
  cronjob:
    ## @param taskCheckAlerts.cronjob.schedule Kubernetes CronJob schedule
    ##
    schedule: "* * * * *"
    ## @param taskCheckAlerts.cronjob.concurrencyPolicy Set the cronjob parameter concurrencyPolicy
    ##
    concurrencyPolicy: Forbid
    ## @param taskCheckAlerts.cronjob.failedJobsHistoryLimit Set the cronjob parameter failedJobsHistoryLimit
    ##
    failedJobsHistoryLimit: 1
    ## @param taskCheckAlerts.cronjob.successfulJobsHistoryLimit Set the cronjob parameter successfulJobsHistoryLimit
    ##
    successfulJobsHistoryLimit: 3
    ## @param taskCheckAlerts.cronjob.ttlSecondsAfterFinished Set the cronjob parameter ttlSecondsAfterFinished
    ##
    ttlSecondsAfterFinished: ""
    ## @param taskCheckAlerts.cronjob.restartPolicy Set the cronjob parameter restartPolicy
    ##
    restartPolicy: OnFailure
    ## @param taskCheckAlerts.cronjob.affinity Affinity for CronJob pod assignment
    ##
    affinity: {}
    ## @param taskCheckAlerts.cronjob.command Override default container command (useful when using custom images)
    ##
    command: []
    ## @param taskCheckAlerts.cronjob.args Override default container args (useful when using custom images)
    ##
    args: []
    ## @param
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.enabled Enabled containers' Security Context
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in container
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.runAsUser Set containers' Security Context runAsUser
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.runAsNonRoot Set container's Security Context runAsNonRoot
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.privileged Set container's Security Context privileged
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.readOnlyRootFilesystem Set container's Security Context readOnlyRootFilesystem
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.allowPrivilegeEscalation Set container's Security Context allowPrivilegeEscalation
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.capabilities.drop List of capabilities to be dropped
    ## @param taskCheckAlerts.cronjob.containerSecurityContext.seccompProfile.type Set container's Security Context seccomp profile
    ##
    containerSecurityContext:
      enabled: true
      seLinuxOptions: null
      runAsUser: 1001
      runAsNonRoot: true
      privileged: false
      readOnlyRootFilesystem: false
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## @param taskCheckAlerts.cronjob.podAnnotations Additional pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param taskCheckAlerts.cronjob.podLabels Additional pod labels
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}

## ==========================================
## Dependency charts
## ==========================================

## @section Kong chart configurations
## ref: https://github.com/bitnami/charts/blob/main/bitnami/kong/values.yaml
##
kong:
  ## @param kong.enabled Enable Kong
  ##
  enabled: true

  ## Bitnami kong image version
  ## ref: https://hub.docker.com/r/bitnami/kong/tags/
  ## @param kong.image.registry [default: docker.io] kong image registry
  ## @param kong.image.repository [default: bitnami/kong] kong image repository
  ## @skip  kong.image.tag kong image tag (immutable tags are recommended)
  ## @param kong.image.digest kong image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param kong.image.pullPolicy kong image pull policy
  ## @param kong.image.pullSecrets Specify docker-registry secret names as an array
  ## @param kong.image.debug Enable image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/kong
    tag: 3.4.2-debian-11-r1
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## E.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false

  ## @param kong.replicaCount Number of Kong replicas
  ##
  replicaCount: 1

  ## @param kong.initContainers Add additional init containers to the Kong pods
  ## e.g.
  ## - name: your-image-name
  ##   image: your-image
  ##   imagePullPolicy: Always
  ##   ports:
  ##     - name: portname
  ##        containerPort: 1234
  ##
  initContainers: |
    - name: render-kong-declarative-conf
      image: '{{ include "kong.image" . }}'
      command:
        - /bin/bash
      args:
        - -ec
        - |
          #!/bin/bash
          # https://github.com/bitnami/containers/blob/main/bitnami/kong/3/debian-11/prebuildfs/opt/bitnami/scripts/liblog.sh
          . /opt/bitnami/scripts/liblog.sh
          info "Rendering hyperdx declarative config template for Kong"

          # https://github.com/bitnami/render-template
          render-template /bitnami/kong/declarative-template/kong.yml.tpl > "/bitnami/kong/declarative-conf/kong.yml"
      volumeMounts:
        - name: declarative-conf-template
          mountPath: /bitnami/kong/declarative-template/
        - name: rendered-declarative-conf
          mountPath: /bitnami/kong/declarative-conf/
      {{- if .Values.containerSecurityContext.enabled }}
      securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 6 }}
      {{- end }}

  ## @param kong.ingressController.enabled Enable Kong Ingress Controller
  ##
  ingressController:
    enabled: false
  ## @param kong.extraVolumes [array] Adittional  volumes to be added to the Kong deployment pods (evaluated as template). Requires setting `kong.kong.extraVolumeMounts`
  ##
  extraVolumes:
    - name: declarative-conf-template
      configMap:
        name: "hyperdx-kong-declarative-conf"
    - name: rendered-declarative-conf
      emptyDir: {}
  ## @param kong.kong.extraVolumeMounts [array] Additional volumeMounts to be added to the Kong Container (evaluated as template). Normally used with `kong.extraVolumes`.
  ## @param kong.kong.extraEnvVars [array] Additional env variables to configure Kong.
  ## ref: https://docs.konghq.com/gateway/latest/production/environment-variables/
  ##
  kong:
    extraVolumeMounts:
      - name: rendered-declarative-conf
        mountPath: /bitnami/kong/declarative-conf/
    extraEnvVars:
      - name: KONG_DECLARATIVE_CONFIG
        value: "/bitnami/kong/declarative-conf/kong.yml"
      - name: KONG_DNS_ORDER
        value: LAST,A,CNAME
      - name: KONG_PLUGINS
        value: request-transformer,cors,key-auth,acl
      - name: KONG_NGINX_HTTP_GZIP
        value: "on"
      - name: KONG_NGINX_HTTP_GZIP_VARY
        value: "on"
      # do not add text/html to gzip_types because it's added by default and will generate
      # nginx: [warn] duplicate MIME type "text/html"
      # http://stackoverflow.com/a/6475493/703144
      - name: KONG_NGINX_HTTP_GZIP_TYPES
        value: "application/json application/x-javascript application/xml application/xml+rss text/css text/javascript text/plain text/xml"
      - name: KONG_NGINX_HTTP_GZIP_PROXIED
        value: "any"

  ## @param kong.ingress.enabled Enable Ingress rule
  ##
  ingress:
    enabled: false
  ## @param kong.service.loadBalancerIP Kubernetes service LoadBalancer IP
  ## @param kong.service.type Kong Kubernetes service type
  ## @param kong.service.ports.proxyHttp Kong proxy service HTTP port
  ##
  service:
    loadBalancerIP: ""
    type: LoadBalancer
    ports:
      proxyHttp: 80

  ## @param kong.database Select which database backend Kong will use. Can be 'postgresql', 'cassandra' or 'off'.
  ## Default to 'off' as declarative configuration is enabled by default so we don't need the database
  ## ref: https://docs.konghq.com/gateway/latest/production/deployment-topologies/db-less-and-declarative-config/
  ##
  database: "off"
  ## @param kong.postgresql.enabled Switch to enable or disable the PostgreSQL helm chart inside the Kong subchart
  ## db is not needed since we use declarative configuration
  ##
  postgresql:
    enabled: false

## Mongodb chart configurations
## ref: https://github.com/bitnami/charts/blob/main/bitnami/mongodb/values.yaml
##
mongodb:
  ## @param mongodb.enabled Switch to enable or disable the mongodb helm chart
  ##
  enabled: true
  ## Bitnami mongodb image version
  ## ref: https://hub.docker.com/r/bitnami/mongodb/tags/
  ## @param mongodb.image.registry [default: docker.io] mongodb image registry
  ## @param mongodb.image.repository [default: bitnami/mongodb] mongodb image repository
  ## @skip mongodb.image.tag mongodb image tag (immutable tags are recommended)
  ## @param mongodb.image.digest mongodb image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param mongodb.image.pullPolicy mongodb image pull policy
  ## @param mongodb.image.pullSecrets Specify image pull secrets
  ## @param mongodb.image.debug Specify if debug values should be set
  ##
  image:
    registry: docker.io
    repository: bitnami/mongodb
    tag: 7.0.5-debian-11-r3
    digest: ""
    ## Specify a imagePullPolicy
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ##
    debug: false

  ## Authentication
  ## @param mongodb.auth.enabled Enable authentication
  ## ref: https://docs.mongodb.com/manual/tutorial/enable-authentication/
  ##
  ## @param mongodb.auth.rootUser root user
  ## @param mongodb.auth.rootPassword root password
  ## ref: https://github.com/bitnami/containers/tree/main/bitnami/mongodb#setting-the-root-user-and-password-on-first-run
  ##
  auth:
    enabled: false
    rootUser: root
    rootPassword: "root"

  ## @param mongodb.architecture MongoDB architecture (`standalone` or `replicaset`)
  ##
  architecture: standalone
  ## @param mongodb.service.ports.mongodb mongodb service port
  ##
  service:
    ports:
      mongodb: 27017

## Redis chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml
##
redis:
  ## @param redis.enabled Switch to enable or disable the Redis helm chart
  ##
  enabled: true
  ## Bitnami Redis image version
  ## ref: https://hub.docker.com/r/bitnami/redis/tags/
  ## @param redis.image.registry [default: docker.io] Redis image registry
  ## @param redis.image.repository [default: bitnami/redis] Redis image repository
  ## @skip redis.image.tag Redis image tag (immutable tags are recommended)
  ## @param redis.image.digest Redis image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param redis.image.pullPolicy Redis image pull policy
  ## @param redis.image.pullSecrets Specify image pull secrets
  ## @param redis.image.debug Specify if debug values should be set
  ##
  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 7.2.4-debian-11-r2
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## Example:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Set to true if you would like to see extra information on logs
    ##
    debug: false

  ## @param redis.architecture Redis architecture. Allowed values: `standalone` or `replication`
  ##
  architecture: standalone
  ## @param redis.service.ports.redis Redis service port
  ##
  service:
    ports:
      redis: 5432

  ## @param redis.auth.enabled Enable password authentication
  ##
  auth:
    enabled: false

## Clickhouse chart configuration
## ref: https://github.com/bitnami/charts/blob/main/bitnami/clickhouse/values.yaml
##
clickhouse:
  ## @param clickhouse.enabled Switch to enable or disable the Clickhouse helm chart
  ##
  enabled: true

  ## Bitnami ClickHouse image
  ## ref: https://hub.docker.com/r/bitnami/clickhouse/tags/
  ## @param clickhouse.image.registry [default: docker.io] ClickHouse image registry
  ## @param clickhouse.image.repository [default: bitnami/clickhouse] ClickHouse image repository
  ## @skip  clickhouse.image.tag ClickHouse image tag (immutable tags are recommended)
  ## @param clickhouse.image.digest ClickHouse image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
  ## @param clickhouse.image.pullPolicy ClickHouse image pull policy
  ## @param clickhouse.image.pullSecrets ClickHouse image pull secrets
  ## @param clickhouse.image.debug Enable ClickHouse image debug mode
  ##
  image:
    registry: docker.io
    repository: bitnami/clickhouse
    tag: 23.12.2-debian-11-r0
    digest: ""
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
    ## Enable debug mode
    ##
    debug: false

  ## Authentication
  ## @param clickhouse.auth.username ClickHouse Admin username
  ## @param clickhouse.auth.password ClickHouse Admin password
  ## @param clickhouse.auth.existingSecret Name of a secret containing the Admin password
  ## @param clickhouse.auth.existingSecretKey Name of the key inside the existing secret
  ##
  auth:
    username: default
    password: "default"
    existingSecret: ""
    existingSecretKey: ""

  ## @param clickhouse.shards Number of ClickHouse shards to deploy
  ##
  shards: 1

  ## @param clickhouse.replicaCount Number of ClickHouse replicas per shard to deploy
  ## if keeper enable, same as keeper count, keeper cluster by shards.
  ##
  replicaCount: 1

  ## @section ClickHouse keeper configuration parameters
  ## @param clickhouse.keeper.enabled Deploy ClickHouse keeper. Support is experimental.
  ##
  keeper:
    enabled: false
  ## @section Zookeeper subchart parameters
  ##
  ## @param clickhouse.zookeeper.enabled Deploy Zookeeper subchart
  ##
  zookeeper:
    enabled: false

  ## ClickHouse service parameters
  ##
  service:
    ## @param clickhouse.service.type ClickHouse service type
    ##
    type: ClusterIP
    ## @param clickhouse.service.ports.http ClickHouse service HTTP port
    ## @param clickhouse.service.ports.https ClickHouse service HTTPS port
    ## @param clickhouse.service.ports.tcp ClickHouse service TCP port
    ## @param clickhouse.service.ports.tcpSecure ClickHouse service TCP (secure) port
    ## @param clickhouse.service.ports.keeper ClickHouse keeper TCP container port
    ## @param clickhouse.service.ports.keeperSecure ClickHouse keeper TCP (secure) container port
    ## @param clickhouse.service.ports.keeperInter ClickHouse keeper interserver TCP container port
    ## @param clickhouse.service.ports.mysql ClickHouse service MySQL port
    ## @param clickhouse.service.ports.postgresql ClickHouse service PostgreSQL port
    ## @param clickhouse.service.ports.interserver ClickHouse service Interserver port
    ## @param clickhouse.service.ports.metrics ClickHouse service metrics port
    ##
    ports:
      http: 8123
      https: 443
      tcp: 9000
      tcpSecure: 9440
      keeper: 2181
      keeperSecure: 3181
      keeperInter: 9444
      mysql: 9004
      postgresql: 9005
      interserver: 9009
      metrics: 8001

  ## @param clickhouse.extraOverrides Extra configuration overrides (evaluated as a template) apart from the default
  ##
  extraOverrides: |
    <clickhouse>
      <query_log>
          <database>system</database>
          <table>query_log</table>
      </query_log>

      <max_connections>4096</max_connections>
      <keep_alive_timeout>64</keep_alive_timeout>
      <max_concurrent_queries>100</max_concurrent_queries>
      <uncompressed_cache_size>8589934592</uncompressed_cache_size>
      <mark_cache_size>5368709120</mark_cache_size>

      <default_profile>default</default_profile>
      <default_database>default</default_database>
      <timezone>UTC</timezone>
      <mlock_executable>false</mlock_executable>
      <!--
          OpenTelemetry log contains OpenTelemetry trace spans.
      -->
      <opentelemetry_span_log>
          <!--
              The default table creation code is insufficient, this <engine> spec
              is a workaround. There is no 'event_time' for this log, but two times,
              start and finish. It is sorted by finish time, to avoid inserting
              data too far away in the past (probably we can sometimes insert a span
              that is seconds earlier than the last span in the table, due to a race
              between several spans inserted in parallel). This gives the spans a
              global order that we can use to e.g. retry insertion into some external
              system.
          -->
          <engine>
              engine MergeTree
              partition by toYYYYMM(finish_date)
              order by (finish_date, finish_time_us, trace_id)
          </engine>
          <database>system</database>
          <table>opentelemetry_span_log</table>
          <flush_interval_milliseconds>7500</flush_interval_milliseconds>
      </opentelemetry_span_log>

      <distributed_ddl>
          <path>/clickhouse/task_queue/ddl</path>
      </distributed_ddl>

      <format_schema_path>/var/lib/clickhouse/format_schemas/</format_schema_path>
    </clickhouse>

  ## @param clickhouse.usersExtraOverrides Users extra configuration overrides (evaluated as a template) apart from the default
  ##
  usersExtraOverrides: |
    <clickhouse>
      <profiles>
          <default>
              <max_memory_usage>10000000000</max_memory_usage>
              <use_uncompressed_cache>0</use_uncompressed_cache>
              <load_balancing>in_order</load_balancing>
              <log_queries>1</log_queries>
          </default>
      </profiles>

      <users>
        <default>
          <password></password>
          <profile>default</profile>
          <networks>
              <ip>::/0</ip>
          </networks>
          <quota>default</quota>
        </default>
        <api>
          <password>api</password>
          <profile>default</profile>
          <networks>
              <ip>::/0</ip>
          </networks>
          <quota>default</quota>
        </api>
        <aggregator>
          <password>aggregator</password>
          <profile>default</profile>
          <networks>
              <ip>::/0</ip>
          </networks>
          <quota>default</quota>
        </aggregator>
        <worker>
          <password>worker</password>
          <profile>default</profile>
          <networks>
              <ip>::/0</ip>
          </networks>
          <quota>default</quota>
        </worker>
      </users>

      <quotas>
        <default>
          <interval>
            <duration>3600</duration>
            <queries>0</queries>
            <errors>0</errors>
            <result_rows>0</result_rows>
            <read_rows>0</read_rows>
            <execution_time>0</execution_time>
          </interval>
        </default>
      </quotas>
    </clickhouse>
